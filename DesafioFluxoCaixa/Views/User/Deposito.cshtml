@model DesafioFluxoCaixa.Models.Transacoes.Deposit
@using System.Text.Json
@using Microsoft.AspNetCore.Http
@using DesafioFluxoCaixa.Models.Pessoas
@inject IHttpContextAccessor HttpContextAccessor

@{
    var User = JsonSerializer.Deserialize<Person>(HttpContextAccessor.HttpContext.Session.GetString("User"));

    if (User.Name != "Admin")
        Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
@{
    ViewData["Title"] = "Depósito";
}

<h1>Depositar na conta de @Model.Conta.Person.Name</h1>

<h3 id="Saldo">Saldo: R$@Model.Conta.Balance</h3>

<hr />
<div class="row">
    <div class="col-md-4">
        <form data-bind="submit: ValidarDados">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Value" class="control-label">Valor *</label>
                <input type="number" step=".01" id="Valor" data-bind="value: Valor, css: { 'is-invalid': Valor.error() && Valor.isModified() }" asp-for="Value" placeholder="R$" class="form-control text-center">
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Descrição</label>
                <input data-bind="value: Descricao" asp-for="Description" type="text" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group text-center mt-3">
                <input type="submit" value="Depositar" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<!-- Modal User -->
<!--<div class="modal fade" id="ModalDepositSuccessUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Deposito efetuado com sucesso</h5>
            </div>
            <div class="modal-body">
                Deseja depositar novamente?
            </div>
            <div class="modal-footer">
                <button onclick="DepositarNovamente ()" type="button" class="btn btn-success" data-bs-dismiss="modal">Depositar novamente</button>
                <button onclick="RetornarPaginaInicial()" type="button" class="btn btn-danger">Retornar à pagina inicial</button>
            </div>
        </div>
    </div>
</div>-->

<script type="text/javascript">

    function viewModel() {

        var self = this;

        ko.validation.init({

            insertMessages: true,
            errorMessageClass: 'invalid-feedback', //Classe do span da msg de erro
            errorClass: 'is-invalid', //Classe do input com a info errada

        }, true);

        self.Valor = ko.observable(0).extend(
            {
                required:
                {
                    params: true,
                    message: "Preenchimento obrigatório"
                },

                validation:
                {
                    message: "O valor não pode ser menor ou igual à zero",
                    validator: function (value) {
                        return value > 0;
                    }
                }
            });
        self.Descricao = ko.observable();

        var Erros = ko.validation.group(self);
        self.ValidarDados = function () {

            if (Erros().length == 0) {
                self.SendAjax();
            }

            else {
                Erros.showAllMessages();
            }
        };

        self.SendAjax = function () {
            $.ajax({
                type: "POST",
                url: "/CRUD/Depositar",
                data:
                {
                    ContaId: @Model.Conta.Id,
                    Valor: self.Valor,
                    Data: self.Data,
                    Descricao: self.Descricao
                },
                dataType: "json",
                success: function (person) {

                    if (person != null) {
                        Swal.fire({
                            title: 'Confirmado',
                            text: "Depósito efetuado com sucesso.",
                            icon: 'success',
                            confirmButtonColor: '#08ac54',
                            confirmButtonText: 'Ok'
                        }).then((result) => {

                            window.location.href = '/User/MandarContaDeposito/' + person.id;
                        })
                    }
                }
            });
        }
    }

    $(document).ready(function () {

        vm = new viewModel();
        ko.applyBindings(vm);
    });

    //function RetornarSelecaoDeposito() {
    //    window.location.href = '/CRUD/SelecionarContaDeposito';
    //}

    //function DepositarNovamente() {
    //    window.location.href = '/CRUD/MandarContaDeposito/' + $('#InputContaId').val();
    //}

    //function RetornarPaginaInicial() {
    //    window.location.href = '/Home/Index';
    //}
</script>
